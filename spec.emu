<!doctype html>
<meta charset="utf8">
<link rel="stylesheet" href="./spec.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="./spec.js"></script>
<pre class="metadata">
title: Error.captureStackTrace
stage: 1
contributors: Daniel Minor
markEffects: true
</pre>

<emu-intro id="intro">
  <h1>Introduction</h1>
  <p></p>
</emu-intro>

<emu-clause id="sec-fundamental-objects" number="20">
  <h1>Fundamental Objects</h1>

  <emu-clause id="sec-error-objects" number="5">
    <h1>Error Objects</h1>

    <emu-clause id="sec-properties-of-the-error-constructor" number="2">
      <h1>Properties of the Error Constructor</h1>

      <emu-clause id="sec-error.capturestacktrace">
        <h1>Error.captureStackTrace ( _error_ [ , _constructor_ ] )</h1>
        <emu-alg>
          1. If _error_ is not an Object, throw a *TypeError* exception.
          1. If IsCallable(_constructor_) is *true*, then
            1. Let _string_ be an implementation-defined string that represents the current stack trace, with all stack
               frames above the topmost call to _constructor_, including that call, omitted from the stack trace.
            1. NOTE: This can be used to hide implementation details on the stack trace that aren't useful to user.
          1. Else,
            1. Let _string_ be an implementation-defined string that represents the current stack trace.
          1. Perform ? SetterThatIgnoresPrototypeProperties(_error_, OrdinaryObjectCreate(*null*), *"stack"*, _string_).
          1. Return *undefined*.
        </emu-alg>
      </emu-clause>
    </emu-clause>
  </emu-clause>
</emu-clause>
